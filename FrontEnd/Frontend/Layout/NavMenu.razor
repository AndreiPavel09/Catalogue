@using Frontend.Services
@using Microsoft.AspNetCore.Components.Authorization

@inject Frontend.Services.AuthService AuthService

<div class="top-row ps-3 navbar navbar-dark">
    @* ... *@
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <AuthorizeView>
            @* <-- Contextul exterior este 'context' implicit *@
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="login" Match="NavLinkMatch.All">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
            <Authorized>
                @* <-- Aici 'context' este valid și se referă la starea generală *@
                <div class="nav-item px-3">
                    <span class="nav-link text-light">Hi, @context.User.Identity?.Name!</span>
                </div>

                @* --- REDENUMEȘTE CONTEXTUL PENTRU AUTHORIZEVIEW INTERIOR --- *@
                <AuthorizeView Roles="Admin" Context="authContext_Admin">
                    @* <-- Context="authContext_Admin" *@
                    <Authorized>
                        @* Acum nu mai e conflict, contextul aici ar fi 'authContext_Admin' (dar nu îl folosim) *@
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="admin">
                                <span class="oi oi-cog" aria-hidden="true"></span> Admin Panel
                            </NavLink>
                        </div>
                        <div class="nav-item px-3 ms-3"><NavLink class="nav-link" href="admin/teachers">Teachers</NavLink></div>
                        <div class="nav-item px-3 ms-3"><NavLink class="nav-link" href="admin/courses">Courses</NavLink></div>
                        <div class="nav-item px-3 ms-3"><NavLink class="nav-link" href="admin/grades">Grades</NavLink></div>
                        <div class="nav-item px-3 ms-3"><NavLink class="nav-link" href="admin/students">Students</NavLink></div>
                        <div class="nav-item px-3 ms-3"><NavLink class="nav-link" href="admin/enrollments">Enrollments</NavLink></div>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="Teacher" Context="authContext_Teacher">
                    @* <-- Context="authContext_Teacher" *@
                    <Authorized>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="teacher">
                                <span class="oi oi-briefcase" aria-hidden="true"></span> Teacher Portal
                            </NavLink>
                        </div>
                        @* Alte linkuri Teacher *@
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="Student" Context="authContext_Student">
                    @* <-- Context="authContext_Student" *@
                    <Authorized>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="student">
                                <span class="oi oi-person" aria-hidden="true"></span> Student Home
                            </NavLink>
                        </div>
                        @* Alte linkuri Student *@
                    </Authorized>
                </AuthorizeView>

                <div class="nav-item px-3">
                    <a class="nav-link" href="#" @onclick="HandleLogout" @onclick:preventDefault>
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </a>
                    
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private void ToggleNavMenu() { collapseNavMenu = !collapseNavMenu; }
    private async Task HandleLogout()
    {
        Console.WriteLine("NavMenu: HandleLogout called."); 
        await AuthService.Logout(); 
    }
}